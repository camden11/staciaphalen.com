{"version":3,"sources":["prismic/PrismicWrapper.js","prismic/PrismicRoute.js","prismic/PrismicPage.js","style/MediaQueries.js","style/Container.js","style/H1.js","style/H2.js","style/P.js","style/A.js","Nav.js","Work.js","About.js","Routes.js","serviceWorker.js","index.js"],"names":["PrismicWrapper","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","prismicCtx","_this2","buildContext","then","setState","catch","e","console","error","concat","_this$props","accessToken","repositoryName","linkResolver","endpoint","Prismic","api","doc","ctx","Routes","routes","react_default","a","createElement","React","Component","PrismicRoute","component","componentProps","path","routerProps","Route","render","routeProps","assign","prismic_PrismicPage","Wrapped","Loading","NotFound","_React$Component","PrismicPage","err","fetchPage","bind","assertThisInitialized","inherits","createClass","key","value","getByUID","pageType","uid","params","MediaQueries","Container","styled","div","_templateObject","H1","h1","H1_templateObject","H2","h2","H2_templateObject","p","P_templateObject","A","A_templateObject","SiteTitleSection","Nav_templateObject","NavLinkSection","_templateObject2","NavLinkWrapper","_templateObject3","active","TitleLink","Link","_templateObject4","NavLink","_templateObject5","Nav","location","style_Container","style_H1","to","data","site_title","pathname","about_page_title","front_page_title","GalleryContainer","Work_templateObject","GalleryTitle","Work_templateObject2","Work","onSlide","currentIndex","gallery","map","item","original","image","url","embedUrl","video_embed","embed_url","image_gallery_default","items","getGalleryItems","showThumbnails","showFullscreenButton","showPlayButton","title","RichText","body","AboutContent","About_templateObject","TextColumn","About_templateObject2","AboutTitle","About_templateObject3","ResumeLink","About_templateObject4","ImageColumn","About_templateObject5","AboutImage","img","_templateObject6","About","log","resume_link","href","target","resume_link_text","src","BrowserRouter","prismic_PrismicRoute","Switch","exact","Boolean","window","hostname","match","ReactDOM","PrismicWrapper_PrismicWrapper","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uOAIqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,WAAY,MAHGR,oFAOE,IAAAS,EAAAN,KACnBA,KAAKO,eACFC,KAAK,SAAAH,GACJC,EAAKG,SAAS,CAAEJ,iBAEjBK,MAAM,SAAAC,GACLC,QAAQC,MAAR,8DAAAC,OACgEH,6CAKvD,IAAAI,EACyCf,KAAKJ,MAAnDoB,EADKD,EACLC,YAAaC,EADRF,EACQE,eAAgBC,EADxBH,EACwBG,aAC/BC,EAAQ,WAAAL,OAAcG,EAAd,sBACd,OAAOG,IAAQC,IAAIF,EAAU,CAAEH,gBAAeR,KAAK,SAAAa,GAAG,MAAK,CACzDA,MACAF,WACAH,cACAE,aAAcA,GAAiB,SAACI,EAAKC,GAAN,MAAc,yCAK/C,IAAMC,EAASxB,KAAKJ,MAAM6B,OAC1B,OAAOC,EAAAC,EAAAC,cAACJ,EAAD,CAAQnB,WAAYL,KAAKI,MAAMC,oBAjCEwB,IAAMC,mCCenCC,EAhBM,SAAAnC,GAAS,IACTkC,EAAiDlC,EAA5DoC,UAAsBC,EAAsCrC,EAAtCqC,eAAgBC,EAAsBtC,EAAtBsC,KAAMC,EAAgBvC,EAAhBuC,YACpD,OACET,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEF,KAAMA,EACNG,OAAQ,SAAAC,GAAU,OAChBZ,EAAAC,EAAAC,cAACE,EAADhC,OAAAyC,OAAA,GACMN,EACAK,EAFN,CAGEjC,WAAY8B,EAAY9B,gDCVnBmC,EAAA,SAACC,EAASC,EAASC,GAAnB,gBAAAC,GAEX,SAAAC,EAAYjD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACjBhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,KAAMJ,KACDQ,MAAQ,CACXkB,IAAK,KACLwB,IAAK,MAEPjD,EAAKkD,UAAYlD,EAAKkD,UAAUC,KAAflD,OAAAmD,EAAA,EAAAnD,QAAAmD,EAAA,EAAAnD,CAAAD,KANAA,EAFR,OAAAC,OAAAoD,EAAA,EAAApD,CAAA+C,EAAAD,GAAA9C,OAAAqD,EAAA,EAAArD,CAAA+C,EAAA,EAAAO,IAAA,qBAAAC,MAAA,WAYTrD,KAAK+C,UAAU/C,KAAKJ,SAZX,CAAAwD,IAAA,4BAAAC,MAAA,SAeezD,GACxBI,KAAK+C,UAAUnD,KAhBN,CAAAwD,IAAA,YAAAC,MAAA,SAmBDzD,GAAO,IAAAU,EAAAN,KACXJ,EAAMS,YACRT,EAAMS,WAAWgB,IAAIiC,SACnBb,EAAQc,SACRvD,KAAKJ,MAAM4D,KAAOxD,KAAKJ,MAAM0C,WAAWmB,OAAOD,IAC/C,GACA,SAACV,EAAKxB,GACAwB,EACFxC,EAAKG,SAAS,iBAAO,CAAEqC,SACdxB,GACThB,EAAKG,SAAS,iBAAO,CAAEa,aA7BtB,CAAA8B,IAAA,SAAAC,MAAA,WAqCT,OAAOrD,KAAKI,MAAMkB,IAChBI,EAAAC,EAAAC,cAACa,EAAD3C,OAAAyC,OAAA,CAASjB,IAAKtB,KAAKI,MAAMkB,KAAStB,KAAKJ,QACrCI,KAAKI,MAAM0C,IACbH,EACEjB,EAAAC,EAAAC,cAACe,EAAD,MACE,KACFD,EACFhB,EAAAC,EAAAC,cAACc,EAAD,MACE,SA7CKG,EAAA,CACahB,IAAMC,YCHnB4B,EAEN,4BAFMA,EAIL,w4BCDV,IA2BeC,EA3BGC,IAAOC,IAAVC,IAQXJ,wMCTJ,IAOeK,EAPJH,IAAOI,GAAVC,wOCAR,IASeC,EATJN,IAAOO,GAAVC,oICAER,IAAOS,EAAVC,wMCAP,IAUeC,EAVLX,IAAOjC,EAAV6C,0xBCIP,IAAMC,EAAmBb,IAAOC,IAAVa,KAIhBC,EAAiBf,IAAOC,IAAVe,KAMdC,EAAiBjB,IAAOC,IAAViB,IAKG,SAAAlF,GAAK,OAAKA,EAAMmF,OAAS,eAAiB,SAI3DC,EAAYpB,YAAOqB,IAAPrB,CAAHsB,KASTC,EAAUvB,YAAOqB,IAAPrB,CAAHwB,KAaPC,mLAEK,IAAAtE,EACmBf,KAAKJ,MAAvB0F,EADDvE,EACCuE,SAAUhE,EADXP,EACWO,IAClB,OACEI,EAAAC,EAAAC,cAAC2D,EAAD,KACE7D,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC4D,EAAD,KACE9D,EAAAC,EAAAC,cAACoD,EAAD,CAAWS,GAAG,KAAKnE,EAAIoE,KAAKC,cAGhCjE,EAAAC,EAAAC,cAAC+C,EAAD,KACEjD,EAAAC,EAAAC,cAACiD,EAAD,CAAgBE,OAA8B,WAAtBO,EAASM,UAC/BlE,EAAAC,EAAAC,cAACuD,EAAD,CAASM,GAAG,UAAUnE,EAAIoE,KAAKG,mBAEjCnE,EAAAC,EAAAC,cAACiD,EAAD,CAAgBE,OAA8B,MAAtBO,EAASM,UAC/BlE,EAAAC,EAAAC,cAACuD,EAAD,CAASM,GAAG,KAAKnE,EAAIoE,KAAKI,4BAhBpBhE,aAAZuD,EACG9B,SAAW,UAuBLV,QAAYwC,uYC/D3B,IAAMU,EAAmBnC,IAAOC,IAAVmC,KAYhBC,EAAerC,YAAOM,EAAPN,CAAHsC,KAKZC,eAGJ,SAAAA,EAAYvG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmG,IACjBtG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqG,GAAAhG,KAAAH,KAAMJ,KAcRwG,QAAU,SAAAC,GACRxG,EAAKY,SAAS,CACZ4F,kBAfFxG,EAAKO,MAAQ,CACXiG,aAAc,GAHCxG,iFASjB,OADgBG,KAAKJ,MAAM0B,IAAIoE,KAAKY,QACrBC,IAAI,SAAAC,GAAI,MAAK,CAC1BC,SAAUD,EAAKE,MAAMC,IACrBC,SAAUJ,EAAKK,YAAYC,8CAUtB,IACCxF,EAAQtB,KAAKJ,MAAb0B,IACA+E,EAAiBrG,KAAKI,MAAtBiG,aACR,OACE3E,EAAAC,EAAAC,cAAC2D,EAAD,KACE7D,EAAAC,EAAAC,cAACmE,EAAD,KACErE,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,CACEqF,MAAOhH,KAAKiH,kBACZC,gBAAgB,EAChBC,sBAAsB,EACtBC,gBAAgB,EAChBhB,QAASpG,KAAKoG,UAEhB1E,EAAAC,EAAAC,cAACqE,EAAD,KAAe3E,EAAIoE,KAAKY,QAAQD,GAAcgB,OAC7CC,WAASjF,OAAOf,EAAIoE,KAAKY,QAAQD,GAAckB,eAtCvCzF,aAAbqE,GACG5C,SAAW,aA4CLV,SAAYsD,m4BChE3B,IAAMqB,GAAe5D,YAAOD,EAAPC,CAAH6D,MAKZC,GAAa9D,IAAOC,IAAV8D,KASZjE,GAKEkE,GAAahE,YAAOM,EAAPN,CAAHiE,KAGZnE,GAMEoE,GAAalE,YAAOW,EAAPX,CAAHmE,MAKVC,GAAcpE,IAAOC,IAAVoE,KAGbvE,GAMEwE,GAAatE,IAAOuE,IAAVC,MAKVC,oLAEK,IACC/G,EAAQtB,KAAKJ,MAAb0B,IAER,OADAV,QAAQ0H,IAAIhH,EAAIoE,KAAK6C,YAAYC,MAE/B9G,EAAAC,EAAAC,cAAC4F,GAAD,KACE9F,EAAAC,EAAAC,cAAC8F,GAAD,KACEhG,EAAAC,EAAAC,cAACgG,GAAD,KAAatG,EAAIoE,KAAK2B,OACrBC,WAASjF,OAAOf,EAAIoE,KAAK6B,MAC1B7F,EAAAC,EAAAC,cAACkG,GAAD,CAAYU,KAAMlH,EAAIoE,KAAK6C,YAAY5B,IAAK8B,OAAO,UAChDnH,EAAIoE,KAAKgD,mBAGdhH,EAAAC,EAAAC,cAACoG,GAAD,KACEtG,EAAAC,EAAAC,cAACsG,GAAD,CAAYS,IAAKrH,EAAIoE,KAAKgB,MAAMC,eAftB7E,aAAduG,GACG9E,SAAW,aAqBLV,SAAYwF,ICrCZ7G,GA/BA,SAAA5B,GACb,OACE8B,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiH,EAAD,CACE3G,KAAK,IACLF,UAAWqD,EACXlD,YAAavC,EACbqC,eAAgB,CAAEuB,IAAK,SAEzB9B,EAAAC,EAAAC,cAACkH,EAAA,EAAD,KACEpH,EAAAC,EAAAC,cAACiH,EAAD,CACEE,OAAK,EACL7G,KAAK,IACLF,UAAWmE,GACXhE,YAAavC,EACbqC,eAAgB,CAAEuB,IAAK,WAEzB9B,EAAAC,EAAAC,cAACiH,EAAD,CACEE,OAAK,EACL7G,KAAK,SACLF,UAAWqG,GACXlG,YAAavC,EACbqC,eAAgB,CAAEuB,IAAK,eClBfwF,QACW,cAA7BC,OAAO3D,SAAS4D,UAEe,UAA7BD,OAAO3D,SAAS4D,UAEhBD,OAAO3D,SAAS4D,SAASC,MACvB,2DCZNC,IAAS/G,OACPX,EAAAC,EAAAC,cAACyH,EAAD,CAAgB5H,OAAQD,GAAQP,eAAe,iBAC/CqI,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlJ,KAAK,SAAAmJ,GACjCA,EAAaC","file":"static/js/main.a67cfb30.chunk.js","sourcesContent":["import React from \"react\";\nimport \"whatwg-fetch\";\nimport Prismic from \"prismic-javascript\";\n\nexport default class PrismicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      prismicCtx: null\n    };\n  }\n\n  componentWillMount() {\n    this.buildContext()\n      .then(prismicCtx => {\n        this.setState({ prismicCtx });\n      })\n      .catch(e => {\n        console.error(\n          `Cannot contact the API, check your prismic configuration:\\n${e}`\n        );\n      });\n  }\n\n  buildContext() {\n    const { accessToken, repositoryName, linkResolver } = this.props;\n    const endpoint = `https://${repositoryName}.prismic.io/api/v2`;\n    return Prismic.api(endpoint, { accessToken }).then(api => ({\n      api,\n      endpoint,\n      accessToken,\n      linkResolver: linkResolver || ((doc, ctx) => \"/\")\n    }));\n  }\n\n  render() {\n    const Routes = this.props.routes;\n    return <Routes prismicCtx={this.state.prismicCtx} />;\n  }\n}\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst PrismicRoute = props => {\n  const { component: Component, componentProps, path, routerProps } = props;\n  return (\n    <Route\n      path={path}\n      render={routeProps => (\n        <Component\n          {...componentProps}\n          {...routeProps}\n          prismicCtx={routerProps.prismicCtx}\n        />\n      )}\n    />\n  );\n};\n\nexport default PrismicRoute;\n","import React from \"react\";\n\nexport default (Wrapped, Loading, NotFound) =>\n  class PrismicPage extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        doc: null,\n        err: null\n      };\n      this.fetchPage = this.fetchPage.bind(this);\n    }\n\n    componentWillMount() {\n      this.fetchPage(this.props);\n    }\n\n    componentWillReceiveProps(props) {\n      this.fetchPage(props);\n    }\n\n    fetchPage(props) {\n      if (props.prismicCtx) {\n        props.prismicCtx.api.getByUID(\n          Wrapped.pageType,\n          this.props.uid || this.props.routeProps.params.uid,\n          {},\n          (err, doc) => {\n            if (err) {\n              this.setState(() => ({ err }));\n            } else if (doc) {\n              this.setState(() => ({ doc }));\n            }\n          }\n        );\n      }\n    }\n\n    render() {\n      return this.state.doc ? (\n        <Wrapped doc={this.state.doc} {...this.props} />\n      ) : this.state.err ? (\n        NotFound ? (\n          <NotFound />\n        ) : null\n      ) : Loading ? (\n        <Loading />\n      ) : null;\n    }\n  };\n","export default {\n  extraSmall: \"@media (max-width: 480px)\",\n  small: \"@media (max-width: 767px)\",\n  medSmall: \"@media (max-width: 812px)\",\n  medium: \"@media (max-width: 900px)\"\n};\n","import styled from \"styled-components\";\nimport MediaQueries from \"./MediaQueries\";\n\nconst Container = styled.div`\n  width: 80%;\n  max-width: 1000px;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  padding-top: 20px;\n  padding-bottom: env(safe-area-inset-bottom);\n  ${MediaQueries.medium} {\n    width: 88%;\n    @supports (padding-left: constant(safe-area-inset-left)) {\n      --safe-area-inset-left: constant(safe-area-inset-left);\n      --safe-area-inset-right: constant(safe-area-inset-right);\n      width: calc(\n        88% - var(--safe-area-inset-left) - var(safe-area-inset-right)\n      );\n    }\n    @supports (padding-left: env(safe-area-inset-left)) {\n      --safe-area-inset-left: env(safe-area-inset-left);\n      --safe-area-inset-right: env(safe-area-inset-right);\n      width: calc(\n        88% - var(--safe-area-inset-left) - var(safe-area-inset-right)\n      );\n    }\n  }\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst H1 = styled.h1`\n  font-family: \"Source Serif Pro\", serif;\n  font-weight: 700;\n  font-size: 22px;\n  color: #000;\n  text-decoration: none;\n`;\nexport default H1;\n","import styled from \"styled-components\";\n\nconst H2 = styled.h2`\n  font-family: \"Source Sans Pro\";\n  font-weigth: 700;\n  font-size: 20px;\n  margin-bottom: 20px;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n`;\n\nexport default H2;\n","import styled from \"styled-components\";\n\nconst P = styled.p`\n  font-family: \"Source Serif Pro\";\n  font-size: 16px;\n`;\n\nexport default P;\n","import styled from \"styled-components\";\n\nconst A = styled.a`\n  font-family: \"Source Serif Pro\";\n  text-decoration: underline;\n  color: #000;\n\n  &:visited: {\n    color: #000;\n  }\n`;\n\nexport default A;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PrismicPage from \"./prismic/PrismicPage\";\nimport { H1, Container } from \"./style\";\n\nconst SiteTitleSection = styled.div`\n  grid-column: span 6;\n`;\n\nconst NavLinkSection = styled.div`\n  grid-column: span 6;\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst NavLinkWrapper = styled.div`\n  padding-left: 20px;\n  padding-top: 5px;\n\n  a {\n    text-decoration: ${props => (props.active ? \"line-through\" : \"none\")};\n  }\n`;\n\nconst TitleLink = styled(Link)`\n  text-decoration: none;\n  color: #000;\n\n  &:visited {\n    color: #000;\n  }\n`;\n\nconst NavLink = styled(Link)`\n  font-family: \"Source Sans Pro\", sans-serif;\n  text-decoration: none;\n\n  &:visited {\n    color: #000;\n  }\n\n  &:hover {\n    text-decoration: line-through;\n  }\n`;\n\nclass Nav extends Component {\n  static pageType = \"nav_bar\";\n  render() {\n    const { location, doc } = this.props;\n    return (\n      <Container>\n        <SiteTitleSection>\n          <H1>\n            <TitleLink to=\"/\">{doc.data.site_title}</TitleLink>\n          </H1>\n        </SiteTitleSection>\n        <NavLinkSection>\n          <NavLinkWrapper active={location.pathname === \"/about\"}>\n            <NavLink to=\"/about\">{doc.data.about_page_title}</NavLink>\n          </NavLinkWrapper>\n          <NavLinkWrapper active={location.pathname === \"/\"}>\n            <NavLink to=\"/\">{doc.data.front_page_title}</NavLink>\n          </NavLinkWrapper>\n        </NavLinkSection>\n      </Container>\n    );\n  }\n}\n\nexport default PrismicPage(Nav);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport ImageGallery from \"react-image-gallery\";\nimport { RichText } from \"prismic-reactjs\";\nimport PrismicPage from \"./prismic/PrismicPage\";\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport { Container, H2, P } from \"./style\";\n\nconst GalleryContainer = styled.div`\n  padding-top: 50px;\n  padding-bottom: 100px;\n  grid-column: span 12;\n\n  p {\n    font-family: \"Source Serif Pro\";\n    line-height: 1.5;\n    font-size: 16px;\n  }\n`;\n\nconst GalleryTitle = styled(H2)`\n  margin-top: 25px;\n  margin-bottom: 10px;\n`;\n\nclass Work extends Component {\n  static pageType = \"front_page\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentIndex: 0\n    };\n  }\n\n  getGalleryItems() {\n    const gallery = this.props.doc.data.gallery;\n    return gallery.map(item => ({\n      original: item.image.url,\n      embedUrl: item.video_embed.embed_url\n    }));\n  }\n\n  onSlide = currentIndex => {\n    this.setState({\n      currentIndex\n    });\n  };\n\n  render() {\n    const { doc } = this.props;\n    const { currentIndex } = this.state;\n    return (\n      <Container>\n        <GalleryContainer>\n          <ImageGallery\n            items={this.getGalleryItems()}\n            showThumbnails={false}\n            showFullscreenButton={false}\n            showPlayButton={false}\n            onSlide={this.onSlide}\n          />\n          <GalleryTitle>{doc.data.gallery[currentIndex].title}</GalleryTitle>\n          {RichText.render(doc.data.gallery[currentIndex].body)}\n        </GalleryContainer>\n      </Container>\n    );\n  }\n}\n\nexport default PrismicPage(Work);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { RichText } from \"prismic-reactjs\";\nimport PrismicPage from \"./prismic/PrismicPage\";\nimport { Container, H2, A, MediaQueries } from \"./style\";\n\nconst AboutContent = styled(Container)`\n  padding: 70px 0;\n  grid-column-gap: 23px;\n`;\n\nconst TextColumn = styled.div`\n  grid-column: span 6;\n\n  p {\n    font-family: \"Source Serif Pro\";\n    line-height: 1.5;\n    font-size: 16px;\n  }\n\n  ${MediaQueries.small} {\n    grid-column: span 12;\n  }\n`;\n\nconst AboutTitle = styled(H2)`\n  margin-bottom: 40px;\n\n  ${MediaQueries.small} {\n    margin-top: 30px;\n    margin-bottom: 10px;\n  }\n`;\n\nconst ResumeLink = styled(A)`\n  margin-top: 20px;\n  display: block;\n`;\n\nconst ImageColumn = styled.div`\n  grid-column: span 6;\n\n  ${MediaQueries.small} {\n    grid-row: 1;\n    grid-column: span 12;\n  }\n`;\n\nconst AboutImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nclass About extends Component {\n  static pageType = \"about_page\";\n  render() {\n    const { doc } = this.props;\n    console.log(doc.data.resume_link.href);\n    return (\n      <AboutContent>\n        <TextColumn>\n          <AboutTitle>{doc.data.title}</AboutTitle>\n          {RichText.render(doc.data.body)}\n          <ResumeLink href={doc.data.resume_link.url} target=\"_blank\">\n            {doc.data.resume_link_text}\n          </ResumeLink>\n        </TextColumn>\n        <ImageColumn>\n          <AboutImage src={doc.data.image.url} />\n        </ImageColumn>\n      </AboutContent>\n    );\n  }\n}\n\nexport default PrismicPage(About);\n","import { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport PrismicRoute from \"./prismic/PrismicRoute\";\nimport React from \"react\";\nimport Nav from \"./Nav\";\nimport Work from \"./Work\";\nimport About from \"./About\";\n\nconst Routes = props => {\n  return (\n    <Router>\n      <div>\n        <PrismicRoute\n          path=\"/\"\n          component={Nav}\n          routerProps={props}\n          componentProps={{ uid: \"nav\" }}\n        />\n        <Switch>\n          <PrismicRoute\n            exact\n            path=\"/\"\n            component={Work}\n            routerProps={props}\n            componentProps={{ uid: \"front\" }}\n          />\n          <PrismicRoute\n            exact\n            path=\"/about\"\n            component={About}\n            routerProps={props}\n            componentProps={{ uid: \"about\" }}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PrismicWrapper from \"./prismic/PrismicWrapper\";\nimport Routes from \"./Routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <PrismicWrapper routes={Routes} repositoryName=\"StaciaPhalen\" />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}